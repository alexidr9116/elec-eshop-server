{"version":3,"file":"static/js/769.08e2c609.chunk.js","mappings":"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","sources":["components/Page.js","pages/Chat.js"],"sourcesContent":["import { forwardRef } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Page = forwardRef(({ children, title = '', meta, ...other }, ref) => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{`${title} | electronic online shop`}</title>\r\n            </Helmet>\r\n            <div ref={ref} {...other}  >\r\n                {children}\r\n            </div>\r\n            <div className=\"h-16 w-full md:hidden \"></div>\r\n        </>\r\n    )\r\n\r\n});\r\nPage.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    title: PropTypes.string,\r\n    meta: PropTypes.node,\r\n};\r\nexport default Page;","import { useEffect, useMemo, useState } from \"react\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport io from 'socket.io-client';\r\n\r\nimport Page from \"../components/Page\";\r\nimport { SERVER_ADDRESS } from \"../utils/axios\";\r\nimport useAuth from \"../hook/useAuth\";\r\nimport { API_CLIENT, SEND_GET_REQUEST } from \"../utils/API\";\r\nimport { fShortDate } from \"../utils/uFormatter\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst ChatItem = ({ chat, user }) => {\r\n    const isMe = (chat.sender === user.id);\r\n    return (\r\n        <div className={`flex p-2 ${isMe ? '' : 'justify-end'}  w-full `}>\r\n            <div className={`rounded-lg ${isMe ? 'bg-base-300 border-l-b-' : 'bg-violet-400'} p-2  flex flex-col items-end`}>\r\n                <p className=\"w-full\">\r\n                    {chat.message}\r\n                </p>\r\n                <small className=\"text-gray-700\">\r\n                    {fShortDate(chat?.createdAt)}\r\n                </small>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default function Chat() {\r\n    const { user } = useAuth();\r\n    const [logs, setLogs] = useState([]);\r\n    const [socket, setSocket] = useState();\r\n    const defaultValues = useMemo(() => ({\r\n        file: null,\r\n        message: ''\r\n    }), []);\r\n    const { register, reset, handleSubmit, setValue, watch, formState: { isSubmitting } } = useForm(defaultValues);\r\n    const file = watch('file');\r\n\r\n    const fileChange = (event) => {\r\n        if (event.target.files && event.target.files.length > 0) {\r\n            setValue('file', event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        const iData = new FormData();\r\n        const { file, message } = data;\r\n\r\n        iData.append(\"message\", message);\r\n        iData.append(\"file\", file);\r\n\r\n        if (socket) {\r\n            const data = {\r\n                type: 'text',\r\n                sender: user?.id,\r\n                receiver: 'all',\r\n                message\r\n            }\r\n\r\n            socket.emit('client-to-server', data);\r\n            reset()\r\n        }\r\n        if (typeof file === 'object') {\r\n            // const data = {\r\n            //     type: 'text',\r\n            //     sender: user?.id,\r\n            //     receiver: 'all',\r\n            //     message\r\n            // }\r\n\r\n            // socket.emit('client-to-server', data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let currentLogs = [];\r\n        const _socket = io.connect(`${SERVER_ADDRESS}`, { transports: ['polling', 'websocket'] });\r\n\r\n        _socket.on('connect', () => {\r\n            _socket.emit('logined', user);\r\n        })\r\n        _socket.on('data-to-client', (data) => {\r\n            const _log = [...currentLogs];\r\n            _log.push({ ...data, createdAt: new Date() });\r\n            currentLogs = _log;\r\n            setLogs(_log);\r\n        })\r\n        setSocket(_socket);\r\n\r\n        SEND_GET_REQUEST(API_CLIENT.chat.getLogs).then(res => {\r\n            if (res.status === 200) {\r\n                setLogs(res.data);\r\n                currentLogs = res.data;\r\n            }\r\n        }).catch(err => {\r\n\r\n        })\r\n    }, [user])\r\n    return (\r\n        <Page title=\"Pubic Chat \" className=\"flex flex-col w-full gap-2 sm:gap-4 \">\r\n            <div className=\"mt-32 w-full\"></div>\r\n\r\n            <div className=\"container flex flex-col w-full p-2\">\r\n                <div className=\"w-full h-96 overflow-y-auto mb-4\">\r\n                    <div className=\"w-full h-full flex flex-col gap-2\">\r\n                        {logs?.map((log, index) => (\r\n                            <ChatItem chat={log} key={index} user={user} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <form className=\"flex w-full gap-1 items-end\" onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                    {/* <div className=\"flex gap-1 flex-col justify-end\">\r\n                        <div>\r\n                            {file && typeof file === 'object' &&\r\n                                <Icon icon={'fa:file-excel-o'} width={20} className=\"m-auto text-accent\" />\r\n                            }\r\n                        </div>\r\n                        <div className=\"flex \">\r\n                            <input hidden id=\"file\" type=\"file\" accept=\"image/*\" onChange={fileChange} />\r\n                            <label htmlFor=\"file\" className=\"rounded-lg  w-9 h-9 cursor-pointer flex \">\r\n                                file..\r\n                            </label>\r\n                        </div>\r\n\r\n                    </div> */}\r\n                    <textarea className=\"textarea textarea-bordered flex-1\"  {...register(\"message\")}></textarea >\r\n                    <button className=\"btn btn-sm p-0 btn-ghost btn-circle \">\r\n                        <Icon icon='fa:telegram' width={24} className={'text-accent'}></Icon>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </Page>\r\n    )\r\n}"],"names":["Page","forwardRef","ref","children","title","other","meta","className","ChatItem","chat","user","isMe","sender","id","message","fShortDate","createdAt","Chat","useAuth","useState","logs","setLogs","socket","setSocket","defaultValues","useMemo","file","useForm","register","reset","handleSubmit","watch","setValue","formState","isSubmitting","useEffect","currentLogs","_socket","io","SERVER_ADDRESS","transports","on","emit","data","_log","push","Date","SEND_GET_REQUEST","API_CLIENT","then","res","status","catch","err","map","log","index","onSubmit","iData","FormData","append","type","receiver","icon","width"],"sourceRoot":""}