{"version":3,"file":"static/js/876.4f3ae561.chunk.js","mappings":"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","sources":["components/Image.js","components/Page.js","pages/Profile.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nImage.propTypes = {\r\n  disabledEffect: PropTypes.bool,\r\n  effect: PropTypes.string,\r\n  ratio: PropTypes.number,\r\n  className: PropTypes.string,\r\n  alt: PropTypes.string,\r\n};\r\n\r\nexport default function Image({ ratio, effect = 'blur', alt = 'lazy-image', className, ...other }) {\r\n  if (ratio) {\r\n    return (\r\n\r\n      <span className={`relative overflow-hidden block w-full  leading-0 border border-transparent ${className}`}\r\n        style={{ paddingTop: `${ratio * 100}%` }} >\r\n        <LazyLoadImage\r\n          wrapperClassName='absolute inset-0 bg-cover'\r\n          className='object-cover w-full h-full'\r\n          {...other}\r\n          alt={alt}\r\n          effect={effect}\r\n          placeholderSrc=\"/images/common/img_placeholder.svg\"\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n  return (\r\n    <span className={`overflow-hidden block w-full leading-0 border border-transparent ${className}`} >\r\n      <LazyLoadImage\r\n        wrapperClassName='bg-cover w-full h-full'\r\n        className='object-cover w-full h-full'\r\n        {...other}\r\n        effect={effect}\r\n        placeholderSrc=\"/images/common/img_placeholder.svg\"\r\n      />\r\n    </span>\r\n\r\n  );\r\n}\r\n","import { forwardRef } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Page = forwardRef(({ children, title = '', meta, ...other }, ref) => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{`${title} | electronic online shop`}</title>\r\n            </Helmet>\r\n            <div ref={ref} {...other}  >\r\n                {children}\r\n            </div>\r\n            <div className=\"h-16 w-full md:hidden \"></div>\r\n        </>\r\n    )\r\n\r\n});\r\nPage.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    title: PropTypes.string,\r\n    meta: PropTypes.node,\r\n};\r\nexport default Page;","import { useForm } from \"react-hook-form\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport { useEffect, useMemo } from \"react\";\r\n\r\nimport useAuth from \"../hook/useAuth\";\r\nimport {  SEND_POST_REQUEST, SEND_POST_REQUEST_WITH_FORM_DATA, ASSETS_URL, API_CLIENT } from \"../utils/API\";\r\nimport toast from 'react-hot-toast';\r\nimport Image from \"../components/Image\";\r\nimport Page from '../components/Page';\r\nimport { Link } from \"react-router-dom\";\r\nimport { t } from \"i18next\";\r\n\r\n\r\nexport default function Profile() {\r\n    const { user, initialize } = useAuth();\r\n\r\n    const defaultValues = useMemo(() => ({\r\n        image: user?.image,\r\n        firstname: user?.firstname,\r\n        lastname: user?.lastname,\r\n        phone: user?.phone,\r\n        email: user?.email,\r\n        bday: user?.bday,\r\n\r\n\r\n    }), [user]);\r\n    const { register, reset, handleSubmit, setValue, watch, formState: { isSubmitting } } = useForm(defaultValues);\r\n    const image = watch(\"image\");\r\n    const imageChange = (event) => {\r\n        if (event.target.files && event.target.files.length > 0) {\r\n            setValue('image', event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        const iData = new FormData();\r\n        const { firstname, lastname, bday, image } = data;\r\n        iData.append(\"firstname\", firstname);\r\n        iData.append(\"lastname\", lastname);\r\n        iData.append(\"bday\", bday);\r\n        iData.append(\"image\", image);\r\n        if (typeof image === \"string\") {\r\n            SEND_POST_REQUEST(API_CLIENT.user.setProfileWithoutImage, data).then(res => {\r\n                if (res.status === 200) {\r\n                    toast.success(\"Your profile was changed\");\r\n                    initialize();\r\n                }\r\n                else {\r\n                    toast.error(res.message);\r\n                }\r\n\r\n\r\n            });\r\n        }\r\n        if (typeof image === \"object\") {\r\n            SEND_POST_REQUEST_WITH_FORM_DATA(API_CLIENT.user.setProfileWithImage, iData).then(res => {\r\n                if (res.status === 200) {\r\n                    toast.success(\"Your profile was changed\");\r\n                    initialize();\r\n                }\r\n                else {\r\n                    toast.error(res.message);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (user)\r\n            reset(defaultValues);\r\n    }, [user, defaultValues, reset]);\r\n\r\n    return (\r\n        <Page title=\"Profile\" className=\"flex flex-col w-full gap-2 sm:gap-4 \">\r\n            <div className=\"breadcrumbs  bg-base-300 absolute w-full left-0 px-6 overflow-x-hidden mt-24\">\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/'>{t('words.home')}</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/user'>{t('menu.user')}</Link>\r\n                    </li>\r\n                    <li>\r\n                        <label >{t('menu.profile')}</label>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"mt-40 w-full\"></div>\r\n            <div className=\"container px-5 py-8 text-gray-700 max-w-2xl\">\r\n                <form onSubmit={handleSubmit(onSubmit)} className=\"grid sm:grid-cols-2 gap-5 rounded-2xl shadow-lg bg-base-300\">\r\n                    <div className=\"card p-6  gap-5  h-full items-center flex flex-col justify-center\">\r\n                        {/* avatar */}\r\n                        <div className=\"mx-auto relative \">\r\n                            {image &&\r\n                                <Image className=\"w-32 h-32 rounded-full outline-dashed outline-stone-300 outline-offset-4 outline-1\"\r\n                                    src={typeof image === 'string' ? `${ASSETS_URL.root}${image}` : URL.createObjectURL(image)}\r\n                                />\r\n                            }\r\n                            <input hidden id=\"image\" type=\"file\" accept=\"image/*\" onChange={imageChange} />\r\n                            <label htmlFor=\"image\" className=\"rounded-lg border bg-base-100  w-9 h-9 cursor-pointer flex absolute bottom-0 right-0\">\r\n                                <Icon icon={'fa:pencil'} width={20} className=\"m-auto text-gray-300\" />\r\n                            </label>\r\n                        </div>\r\n\r\n                        <p className=\"text-gray-500 text-center text-sm\">\r\n                            Allowed *.jpeg, *.jpg, *.png, *.gif <br />\r\n                            max size of 3.1 MB\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\" p-6 gap-3\">\r\n                        <div className=\"grid  gap-5 mb-5\">\r\n                            <div className=\"w-full\">\r\n                                <p className=\"font-bold text-sm pl-2\"> {`First Name`}</p>\r\n                                <input className=\"input h-10 border border-base-300 w-full\" required\r\n                                    {...register(\"firstname\")} />\r\n                            </div>\r\n                            <div className=\"w-full\">\r\n                                <p className=\"font-bold text-sm pl-2\"> {`Last Name`}</p>\r\n                                <input className=\"input h-10 border border-base-300 w-full\" required\r\n                                    {...register(\"lastname\")} />\r\n                            </div>\r\n                            <div className=\"w-full\">\r\n                                <p className=\"font-bold text-sm pl-2\"> {`Mobile`}</p>\r\n                                <input className=\"input h-10 border border-base-300 w-full \" readOnly disabled\r\n                                    {...register(\"phone\")} />\r\n                            </div>\r\n                            <div className=\"w-full\">\r\n                                <p className=\"font-bold text-sm pl-2\" > {`Email`}</p>\r\n                                <input className=\"input h-10 border border-base-300 w-full\"   readOnly disabled\r\n                                    {...register(\"email\")} />\r\n                            </div>\r\n\r\n                            <div className=\"w-full \">\r\n                                <p className=\"font-bold text-sm pl-2\">{`Birthday`}</p>\r\n                                <input placeholder=\"1996-4-3\" className=\"input h-10 border border-base-300 w-full\" required\r\n                                    {...register(\"bday\")} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex \">\r\n                            <button type=\"submit\" className={`btn btn-accent px-5 ml-auto ${isSubmitting && 'loading'}`}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Page>\r\n    )\r\n\r\n\r\n}"],"names":["Image","ratio","effect","alt","className","other","style","paddingTop","LazyLoadImage","wrapperClassName","placeholderSrc","Page","forwardRef","ref","children","title","meta","Profile","useAuth","user","initialize","defaultValues","useMemo","image","firstname","lastname","phone","email","bday","useForm","register","reset","handleSubmit","setValue","watch","isSubmitting","formState","useEffect","to","t","onSubmit","data","iData","FormData","append","SEND_POST_REQUEST","API_CLIENT","then","res","status","toast","message","SEND_POST_REQUEST_WITH_FORM_DATA","src","ASSETS_URL","URL","createObjectURL","hidden","id","type","accept","onChange","event","target","files","length","htmlFor","icon","width","required","readOnly","disabled","placeholder"],"sourceRoot":""}