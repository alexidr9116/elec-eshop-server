{"version":3,"file":"static/js/590.1a1cb1e0.chunk.js","mappings":"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","sources":["components/Page.js","components/skeleton/BasketSkeleton.js","pages/client/TransactionHistory.js"],"sourcesContent":["import { forwardRef } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Page = forwardRef(({ children, title = '', meta, ...other }, ref) => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{`${title} | electronic online shop`}</title>\r\n            </Helmet>\r\n            <div ref={ref} {...other}  >\r\n                {children}\r\n            </div>\r\n            <div className=\"h-16 w-full md:hidden \"></div>\r\n        </>\r\n    )\r\n\r\n});\r\nPage.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    title: PropTypes.string,\r\n    meta: PropTypes.node,\r\n};\r\nexport default Page;","export default function BasketTableSkeleton() {\r\n    return (\r\n        <div className=\"animate-pulse grid w-full\">\r\n            <div className=\"grid gap-2\">\r\n                {\r\n                    [1, 2, 3].map((value, index) => (\r\n                        <div className=\"flex gap-2 w-full items-center\" key={index}>\r\n                            <div className=\"flex gap-2 w-40\" >\r\n                                <div className=\"w-16 h-16 bg-base-300\">\r\n                                </div>\r\n                                <div className=\"flex flex-col w-24 justify-center\">\r\n                                    <label className=\"w-24 h-6 bg-base-300 mb-2\"></label>\r\n                                    <label className=\"w-18 h-6 bg-base-300\"></label>\r\n                                </div>\r\n                            </div>\r\n                            <label className=\"bg-base-300 w-1/4 h-6\">\r\n                            </label>\r\n                            <div className=\"flex flex-col w-24 justify-center\">\r\n                                <label className=\"w-24 h-6 bg-base-300 mb-2\"></label>\r\n                                <label className=\"w-18 h-6 bg-base-300\"></label>\r\n                            </div>\r\n                            <label className=\"bg-base-300 w-1/4 h-6\">\r\n                            </label>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nimport { t } from \"i18next\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport BasketTableSkeleton from \"../../components/skeleton/BasketSkeleton\";\r\nimport { strPrice, strNumber, fShortDate } from \"../../utils/uFormatter\";\r\nimport Page from \"../../components/Page\";\r\n\r\nimport { API_PAYMENT, SEND_GET_REQUEST, } from \"../../utils/API\";\r\n\r\n\r\nexport default function TransactionHistory() {\r\n\r\n    const [transactions, setTransactions] = useState([]);\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        SEND_GET_REQUEST(API_PAYMENT.getUserTransactions).then(res => {\r\n            setLoading(false);\r\n            if (res.status === 200 && res.data) {\r\n                setTransactions(res.data);\r\n            }\r\n        }).catch(err => {\r\n            setLoading(false);\r\n        })\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Page title=\"Favorites\" className=\"flex flex-col w-full gap-2 sm:gap-4 \">\r\n            <div className=\"breadcrumbs  bg-base-300 absolute w-full left-0 px-6 overflow-x-hidden mt-24\">\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/'>{t('words.home')}</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/shopping'>{t('words.shopping')}</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/shopping/basket'>{t('shopping.basket')}</Link>\r\n                    </li>\r\n                    <li>\r\n                        <label >{t('transaction.title')}</label>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"mt-40 w-full\"></div>\r\n            <div className=\"flex flex-col w-full p-4 gap-4 items-center container\">\r\n                <label className=\"font-bold\">\r\n                    {t('shopping.transactions')}&nbsp;({transactions?.length} {t('words.items')})\r\n                </label>\r\n                {transactions.length === 0 &&\r\n                    <div className=\"w-full sm:w-3/4 flex flex-col gap-4 items-center\">\r\n                        <img className=\"w-full max-w-sm h-full\" alt='empty' src='/assets/empty_cart.svg'>\r\n\r\n                        </img>\r\n                        <label className=\"text-lg\">No Transaction yet</label>\r\n                    </div>\r\n                }\r\n                {\r\n                    loading && <BasketTableSkeleton></BasketTableSkeleton>\r\n                }\r\n                {/* product list */}\r\n                {!loading && transactions?.length > 0 &&\r\n                    <div className=\"w-full overflow-auto\">\r\n                        <table className=\"table w-full\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>\r\n                                        {t('transaction.id')}\r\n                                    </td>\r\n                                    <td>\r\n                                        {t('transaction.total')}\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        {t('transaction.mode')}\r\n                                    </td>\r\n                                    <td>\r\n                                        {t('transaction.status')}\r\n                                    </td>\r\n                                    <td>\r\n                                        {t('transaction.created')}\r\n                                    </td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    transactions.map((transaction, index) => (\r\n                                        <tr key={index}>\r\n                                            <td className='cursor-pointer hover:text-accent' >\r\n                                                <Link to = {`/shopping/transaction/${transaction?.transactionId}`}>\r\n                                                    #{transaction?.transactionId}\r\n                                                </Link>\r\n                                            </td>\r\n                                            <td>\r\n                                                {strPrice(transaction?.total, transaction?.currency)}\r\n                                            </td>\r\n\r\n                                            <td className=\"uppercase\">\r\n                                                {transaction?.mode}\r\n                                            </td>\r\n                                            <td className=\"uppercase\">\r\n                                                {transaction?.status}\r\n                                            </td>\r\n                                            <td>\r\n                                                {fShortDate(transaction?.createdAt)}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n\r\n                                    <td className='text-lg font-bold text-accent text-center ' colSpan={5}>\r\n                                        COMPLETED:{strNumber(transactions.filter(t => t.status.toLowerCase() === \"completed\").length)},\r\n                                        PENDING:{strNumber(transactions.filter(t => t.status.toLowerCase() === \"pending\").length)}\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </Page>\r\n    )\r\n}"],"names":["Page","forwardRef","ref","children","title","other","meta","className","BasketTableSkeleton","map","value","index","TransactionHistory","useState","transactions","setTransactions","useNavigate","loading","setLoading","useEffect","SEND_GET_REQUEST","API_PAYMENT","then","res","status","data","catch","err","to","t","length","alt","src","transaction","transactionId","strPrice","total","currency","mode","fShortDate","createdAt","colSpan","strNumber","filter","toLowerCase"],"sourceRoot":""}