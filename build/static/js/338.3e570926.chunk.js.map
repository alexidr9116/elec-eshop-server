{"version":3,"file":"static/js/338.3e570926.chunk.js","mappings":"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","sources":["components/Page.js","components/skeleton/BasketSkeleton.js","pages/client/DeliveryOrders.js","utils/productParser.js"],"sourcesContent":["import { forwardRef } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Page = forwardRef(({ children, title = '', meta, ...other }, ref) => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{`${title} | electronic online shop`}</title>\r\n            </Helmet>\r\n            <div ref={ref} {...other}  >\r\n                {children}\r\n            </div>\r\n            <div className=\"h-16 w-full md:hidden \"></div>\r\n        </>\r\n    )\r\n\r\n});\r\nPage.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    title: PropTypes.string,\r\n    meta: PropTypes.node,\r\n};\r\nexport default Page;","export default function BasketTableSkeleton() {\r\n    return (\r\n        <div className=\"animate-pulse grid w-full\">\r\n            <div className=\"grid gap-2\">\r\n                {\r\n                    [1, 2, 3].map((value, index) => (\r\n                        <div className=\"flex gap-2 w-full items-center\" key={index}>\r\n                            <div className=\"flex gap-2 w-40\" >\r\n                                <div className=\"w-16 h-16 bg-base-300\">\r\n                                </div>\r\n                                <div className=\"flex flex-col w-24 justify-center\">\r\n                                    <label className=\"w-24 h-6 bg-base-300 mb-2\"></label>\r\n                                    <label className=\"w-18 h-6 bg-base-300\"></label>\r\n                                </div>\r\n                            </div>\r\n                            <label className=\"bg-base-300 w-1/4 h-6\">\r\n                            </label>\r\n                            <div className=\"flex flex-col w-24 justify-center\">\r\n                                <label className=\"w-24 h-6 bg-base-300 mb-2\"></label>\r\n                                <label className=\"w-18 h-6 bg-base-300\"></label>\r\n                            </div>\r\n                            <label className=\"bg-base-300 w-1/4 h-6\">\r\n                            </label>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nimport { Icon } from \"@iconify/react\";\r\nimport { t } from \"i18next\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { Link,useNavigate } from \"react-router-dom\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\n\r\nimport Rating from \"../../components/Ratings\";\r\nimport BasketTableSkeleton from \"../../components/skeleton/BasketSkeleton\";\r\nimport TextMaxLine from \"../../components/TextMaxLine\";\r\n\r\nimport { getProductImageUrl, getProductRating } from \"../../utils/productParser\";\r\nimport { strPrice, strNumber } from \"../../utils/uFormatter\";\r\nimport Page from \"../../components/Page\";\r\n\r\nimport { API_CLIENT, SEND_POST_REQUEST } from \"../../utils/API\";\r\n\r\nexport default function DeliveryOrders() {\r\n \r\n    const [orders, setOrders] = useState([]);\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(false);\r\n     \r\n    useEffect(() => {\r\n        setLoading(true)\r\n            SEND_POST_REQUEST(API_CLIENT.product.getDeliveryOrders).then(res => {\r\n                setLoading(false);\r\n                if (res.status === 200 && res.data) {\r\n                    setOrders(res.data);\r\n                }\r\n            }).catch(err => {\r\n                setLoading(false);\r\n            })\r\n       \r\n    }, []);\r\n\r\n    return (\r\n        <Page title=\"Favorites\" className=\"flex flex-col w-full gap-2 sm:gap-4 \">\r\n            <div className=\"breadcrumbs  bg-base-300 absolute w-full left-0 px-6 overflow-x-hidden mt-24\">\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/'>{t('words.home')}</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/shopping'>{t('words.shopping')}</Link>\r\n                    </li>\r\n                    <li>\r\n                        <label >{t('menu.my-orders')}</label>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"mt-40 w-full\"></div>\r\n            <div className=\"flex flex-col w-full p-4 gap-4 items-center\">\r\n            <label className=\"font-bold\">\r\n                {t('shopping.delivery-orders')}&nbsp;({orders?.length} {t('words.items')})\r\n            </label>\r\n            {orders.length === 0 &&\r\n                <div className=\"w-full sm:w-3/4 flex flex-col gap-4 items-center\">\r\n                    <img className=\"w-full max-w-sm h-full\" alt='empty' src='/assets/empty_cart.svg'>\r\n\r\n                    </img>\r\n                    <label className=\"text-lg\">No Product yet</label>\r\n                </div>\r\n            }\r\n            {\r\n                loading && <BasketTableSkeleton></BasketTableSkeleton>\r\n            }\r\n            {/* product list */}\r\n            {!loading && orders?.length > 0 &&\r\n                <div className=\"w-full overflow-auto\">\r\n                    <table className=\"table w-full\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td>\r\n                                    {t('shopping.t_product')}\r\n                                </td>\r\n                                <td>\r\n                                    {t('shopping.price')}\r\n                                </td>\r\n                                <td>\r\n                                    {t('shopping.amount')}\r\n                                </td>\r\n                                <td>\r\n                                    {t('shopping.delivery-status')}\r\n                                </td>\r\n                                 \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                orders.map((order, index) => (\r\n                                    <tr key={index}>\r\n                                        <td className = 'cursor-pointer' onClick = {()=>navigate(`/product-detail/${order?.t_product?.id}`,{replace:true})}>\r\n                                            \r\n                                            <div className=\"flex gap-2 w-72 items-center\">\r\n                                                <LazyLoadImage\r\n                                                    src={`${getProductImageUrl(order?.t_product?.image)}`}\r\n                                                    wrapperClassName=\"w-24\"\r\n                                                    effect=\"blur\"\r\n                                                    alt={`${index}`}\r\n                                                >\r\n                                                </LazyLoadImage>\r\n                                                <div className=\"flex flex-col w-48\">\r\n                                                    <TextMaxLine\r\n                                                        maxLine={1}\r\n                                                        text={order?.t_product?.name}>\r\n\r\n                                                    </TextMaxLine>\r\n                                                    <Rating\r\n                                                        size=\"sm\"\r\n                                                        readOnly={true}\r\n                                                        value={getProductRating(order?.t_product?.reviews)}>\r\n                                                    </Rating>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            {strPrice(order?.cost*order?.amount, order?.currency)}\r\n                                        </td>\r\n                                        <td>\r\n                                            {strNumber(order?.amount)}\r\n                                        </td>\r\n                                        <td>\r\n                                            {(order?.status === '')?\"Waiting\":(orders?.status)}\r\n                                        </td>\r\n                                      \r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <td colSpan={3}>\r\n\r\n                                </td>\r\n                                <td className='text-lg font-bold text-accent '>\r\n                                    {\r\n                                        strPrice(orders.reduce((value,order)=>(value+order.cost*order.amount),0),\"USD\")\r\n                                    }\r\n                                </td>\r\n                                \r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n        </Page>\r\n    )\r\n}","import { ASSETS_URL } from \"./API\";\r\n\r\nexport function getProductImageUrl(images){\r\n    try{\r\n      \r\n        const image = JSON.parse(images)[0].name.replace('products/','');\r\n        return `${ASSETS_URL.ezo}${image}`;\r\n    }\r\n    catch(err){\r\n        console.log(err)\r\n        return `${ASSETS_URL.image}product.jpg`;\r\n    }\r\n}\r\n\r\nexport function getProductRating(reviews){\r\n    return (reviews?.reduce((p,c)=>(p+c.rating),0)/reviews?.length);\r\n}"],"names":["Page","forwardRef","ref","children","title","other","meta","className","BasketTableSkeleton","map","value","index","DeliveryOrders","useState","orders","setOrders","navigate","useNavigate","loading","setLoading","useEffect","SEND_POST_REQUEST","API_CLIENT","then","res","status","data","catch","err","to","t","length","alt","src","order","onClick","t_product","id","replace","LazyLoadImage","getProductImageUrl","image","wrapperClassName","effect","maxLine","text","name","size","readOnly","getProductRating","reviews","strPrice","cost","amount","currency","strNumber","colSpan","reduce","images","JSON","parse","ASSETS_URL","console","log","p","c","rating"],"sourceRoot":""}