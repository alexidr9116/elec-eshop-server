{"version":3,"file":"static/js/440.ea34c34d.chunk.js","mappings":"oNAIMA,GAAOC,EAAAA,EAAAA,aAAW,WAA2CC,GAAS,IAAjDC,EAAgD,EAAhDA,SAAgD,IAAtCC,MAAAA,OAAsC,MAA9B,GAA8B,EAAjBC,GAAiB,EAA1BC,MAA0B,aACvE,OACI,iCACI,SAAC,KAAD,WACI,qCAAWF,EAAX,kCAEJ,gCAAKF,IAAKA,GAASG,GAAnB,aACKF,MAEL,gBAAKI,UAAU,iCAU3B,O,sMCVe,SAASC,IACpB,OAA6BC,EAAAA,EAAAA,KAArBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACd,GAAuCC,EAAAA,EAAAA,UAAS,GAAhD,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAgBC,EAAAA,EAAAA,UAAQ,iBAAO,CACjCC,KAAMP,EAAKQ,SACXC,MAAMT,EAAKS,MACXC,SAAU,MACV,CAACV,IACL,GAAuEW,EAAAA,EAAAA,IAAQN,GAAvEO,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,aAA2BC,EAApD,EAAuCC,UAAaD,aAoBpD,OALAE,EAAAA,EAAAA,YAAU,WACFjB,GACAa,EAAMR,KACX,CAACL,EAAMK,EAAeQ,KAGrB,UAAC,IAAD,CAAMnB,MAAM,UAAUG,UAAU,uCAAhC,WACI,gBAAKA,UAAU,+EAAf,UACI,2BACI,yBACI,SAAC,KAAD,CAAMqB,GAAG,IAAT,UAAcC,EAAAA,EAAAA,GAAE,mBAEpB,yBACI,SAAC,KAAD,CAAMD,GAAG,QAAT,UAAkBC,EAAAA,EAAAA,GAAE,sBAExB,yBACI,4BAASA,EAAAA,EAAAA,GAAE,gCAIvB,gBAAKtB,UAAU,kBACf,gBAAKA,UAAU,6CAAf,UACI,kBAAMuB,SAAUN,GAnCX,SAACO,IACdC,EAAAA,EAAAA,IAAkBC,EAAAA,GAAAA,KAAAA,iBAAD,QAAC,UAAqCF,GAAtC,IAA2CG,OAAOrB,KAAesB,MAAK,SAAAC,GAChE,MAAfA,EAAIC,QACJC,EAAAA,GAAAA,QAAcF,EAAIG,SAClB5B,KAGA2B,EAAAA,GAAAA,MAAYF,EAAIG,eA4BwBhC,UAAU,oEAAlD,WACI,gBAAKiC,IAAM,6BAA6BC,IAAM,GAAGlC,UAAU,UAC3D,mIAGA,iBAAKA,UAAU,SAAf,WACI,eAAGA,UAAU,yBAAb,0BACA,0BAAOA,UAAU,2CAA2CmC,UAAQ,EAACC,UAAQ,EAACC,UAAQ,GAC9EtB,EAAS,cAErB,iBAAKf,UAAU,SAAf,WACI,eAAGA,UAAU,yBAAb,4BACA,0BAAOA,UAAU,2CAA2CmC,UAAQ,EAACC,UAAQ,EAACC,UAAQ,GAC9EtB,EAAS,eAErB,iBAAKf,UAAU,SAAf,WACI,eAAGA,UAAU,yBAAb,iCACA,SAAC,IAAD,CAAQsC,MAAOhC,EAAcI,KAAK,cAAc6B,UAAW,SAACD,GAAD,OAAS/B,EAAgB+B,UAExF,iBAAKtC,UAAU,SAAf,WACI,eAAGA,UAAU,yBAAb,6BACA,6BAAUwC,KAAM,EAAGxC,UAAU,0CAA0CmC,UAAQ,GACvEpB,EAAS,kBAGrB,gBAAKf,UAAU,QAAf,UACI,mBAAQyC,KAAK,SAASzC,UAAS,sCAAiCkB,GAAgB,WAAhF","sources":["components/Page.js","pages/client/SiteFeedback.js"],"sourcesContent":["import { forwardRef } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Page = forwardRef(({ children, title = '', meta, ...other }, ref) => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{`${title} | electronic online shop`}</title>\r\n            </Helmet>\r\n            <div ref={ref} {...other}  >\r\n                {children}\r\n            </div>\r\n            <div className=\"h-16 w-full md:hidden \"></div>\r\n        </>\r\n    )\r\n\r\n});\r\nPage.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    title: PropTypes.string,\r\n    meta: PropTypes.node,\r\n};\r\nexport default Page;","import { useForm } from \"react-hook-form\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\n\r\nimport useAuth from \"../../hook/useAuth\";\r\nimport { SEND_POST_REQUEST,  API_CLIENT } from \"../../utils/API\";\r\nimport toast from 'react-hot-toast';\r\nimport Page from '../../components/Page';\r\nimport { Link } from \"react-router-dom\";\r\nimport { t } from \"i18next\";\r\nimport Rating from \"../../components/Ratings\";\r\n\r\n\r\nexport default function SiteFeedback() {\r\n    const { user, initialize } = useAuth();\r\n    const [customerRate,setCustomerRate] = useState(0);\r\n    const defaultValues = useMemo(() => ({\r\n        name: user.fullName,\r\n        email:user.email,\r\n        feedback: \"\",\r\n    }), [user]);\r\n    const { register, reset, handleSubmit, formState: { isSubmitting } } = useForm(defaultValues);\r\n\r\n    const onSubmit = (data) => {\r\n        SEND_POST_REQUEST(API_CLIENT.user.setSiteFeedback, {...data,rating:customerRate}).then(res => {\r\n            if (res.status === 200) {\r\n                toast.success(res.message);\r\n                initialize();\r\n            }\r\n            else {\r\n                toast.error(res.message);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (user)\r\n            reset(defaultValues);\r\n    }, [user, defaultValues, reset]);\r\n\r\n    return (\r\n        <Page title=\"Profile\" className=\"flex flex-col w-full gap-2 sm:gap-4 \">\r\n            <div className=\"breadcrumbs  bg-base-300 absolute w-full left-0 px-6 overflow-x-hidden mt-24\">\r\n                <ul>\r\n                    <li>\r\n                        <Link to='/'>{t('words.home')}</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/user'>{t('menu.shopping')}</Link>\r\n                    </li>\r\n                    <li>\r\n                        <label >{t('menu.site-feedback')}</label>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"mt-40 w-full\"></div>\r\n            <div className=\"container px-5 py-8 text-gray-700 max-w-xl\">\r\n                <form onSubmit={handleSubmit(onSubmit)} className=\"flex p-4 sm:p-8 flex-col gap-4 rounded-2xl shadow-lg bg-base-300 \">\r\n                    <img src = '/assets/index-feedback.svg' alt = '' className=\"h-40\"/>\r\n                    <p>\r\n                    We would appreciate it if you could provide us with feedback on how you felt while using this website.\r\n                    </p>\r\n                    <div className=\"w-full\">\r\n                        <p className=\"font-bold text-sm pl-2\"> {`Name*`}</p>\r\n                        <input className=\"input h-10 border border-base-300 w-full\" required readOnly disabled\r\n                            {...register(\"name\")} />\r\n                    </div>\r\n                    <div className=\"w-full\">\r\n                        <p className=\"font-bold text-sm pl-2\"> {`E-mail*`}</p>\r\n                        <input className=\"input h-10 border border-base-300 w-full\" required readOnly disabled\r\n                            {...register(\"email\")} />\r\n                    </div>\r\n                    <div className=\"w-full\">\r\n                        <p className=\"font-bold text-sm pl-2\"> {`Your Rating*`}</p>\r\n                        <Rating value={customerRate} name=\"your-review\" onChanged={(value)=>setCustomerRate(value)}></Rating>\r\n                    </div>\r\n                    <div className=\"w-full\">\r\n                        <p className=\"font-bold text-sm pl-2\" > {`Feedback`}</p>\r\n                        <textarea rows={4} className=\"textarea  border border-base-300 w-full\" required\r\n                            {...register(\"feedback\")} />\r\n                    </div>\r\n\r\n                    <div className=\"flex \">\r\n                        <button type=\"submit\" className={`btn btn-accent px-5 ml-auto ${isSubmitting && 'loading'}`}>SEND</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </Page>\r\n    )\r\n\r\n\r\n}"],"names":["Page","forwardRef","ref","children","title","other","meta","className","SiteFeedback","useAuth","user","initialize","useState","customerRate","setCustomerRate","defaultValues","useMemo","name","fullName","email","feedback","useForm","register","reset","handleSubmit","isSubmitting","formState","useEffect","to","t","onSubmit","data","SEND_POST_REQUEST","API_CLIENT","rating","then","res","status","toast","message","src","alt","required","readOnly","disabled","value","onChanged","rows","type"],"sourceRoot":""}